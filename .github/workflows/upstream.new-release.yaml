name: Check for releases
on:
  workflow_call:
    inputs:
      version-regex:
        description: Version regex to filter versions
        required: false
        type: string
      upstream:
        description: Upstream repository to look for the new versions
        required: true
        type: string
    outputs:
      version:
        description: Version tag of the latest release (the one being published)
        value: ${{ jobs.upstream.outputs.version }}
      publish:
        description: Specifiy whether an upstream release is to be published
        value: ${{ jobs.upstream.outputs.needs-release }}

jobs:
  upstream:
    name: Find an upstream release to publish locally
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.upstream.outputs.tag }}
      ## Current repo latest is older than than upstream (or our repo has no tags)
      needs-release: ${{ steps.current.outputs.older == 'true' || steps.current.outputs.tag == '' }}
    steps:
      - uses: actions/checkout@v2
      -
        uses: dysnix/find-latest-tag@v1
        id: upstream
        with:
          repository: ${{ inputs.upstream }}
          regex: ${{ inputs.version-regex }}
      -
        uses: dysnix/find-latest-tag@v2
        id: current
        with:
          repository: ${{ github.repository }}
          regex: ${{ inputs.version-regex }}
          compare-to: ${{ steps.upstream.outputs.tag }}
